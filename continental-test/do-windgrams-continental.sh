#!/bin/bash
# Usage:
#  ./do-windgrams-continental.sh $YEAR $MONTH $DAY $HOUR
# writes  file /mnt/windgrams-done when finished

UTCYEAR=$1 #`echo $DATE_STR | cut -c1-4`
UTCMONTH=$2 #=`echo $DATE_STR | cut -c5-6`
UTCDAY=$3 #=`echo $DATE_STR | cut -c7-8`
HOUR=$4 #=`echo $DATE_STR | cut -c9-10`
OUT_DIR=/mnt/windgrams
YEAR=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%Y`
MONTH=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%m`
DAY=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%d`
YEAR2=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC +  31 hours" +%Y`
MONTH2=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC +  31 hours" +%m`
DAY2=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC +  31 hours" +%d`
YEAR2=`date -d "$YEAR-$MONTH-$DAY + 1 day" +%Y`
echo UTC starting time $UTCYEAR-$UTCMONTH-$UTCDAY $HOUR
echo DAY 0 is $YEAR-$MONTH-$DAY, DAY1 is $YEAR2-$MONTH2-$DAY2

WEBSERVERIP=`./webserver-ip.sh`

cd plot-generation
mkdir -p $OUT_DIR
mkdir -p $OUT_DIR/twoDay
mkdir -p $OUT_DIR/oneDay
mkdir -p $OUT_DIR/twoDay/$YEAR-$MONTH-$DAY
mkdir -p $OUT_DIR/oneDay/$YEAR-$MONTH-$DAY
mkdir -p $OUT_DIR/oneDay/$YEAR2-$MONTH2-$DAY2
#rm -f $OUT_DIR/*
TWODAYMONTH=`date +%m`
TWODAYYEAR=`date +%Y`
TWODAYDAY=`date +%d`
TWODAYDATESTRING=$TWODAYYEAR-$TWODAYMONTH-$TWODAYDAY
YEARDAY0=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%Y`
MONTHDAY0=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%m`
DAYDAY0=`date -d "$UTCYEAR-$UTCMONTH-$UTCDAY $HOUR UTC + 7 hours" +%d`
DATESTRINGDAY0=$YEARDAY0-$MONTHDAY0-$DAYDAY0
DATESTRINGDAY1=$YEARDAY0-$MONTHDAY0-$DAYDAY0
if [ -z $NOCALCULATE ]; then
  echo Calling windgram-continental
  ./locations-group-by-id-and-run-windgrams.lisp
  export NCARG_ROOT=/home/ubuntu/NCARG/
  parallel --gnu -j 15 < run-my-windgrams.sh # -j 15
  echo Done with wingram-continental
fi
if [ -z $NOUPLOAD ]; then 
	ssh -i ~/.ssh/montreal.pem ubuntu@$WEBSERVERIP "mkdir -p html/windgrams/twoDay/$TWODAYDATESTRING html/windgrams/oneDay/$DATESTRINGDAY0 html/windgrams/oneDay/$DATESTRINGDAY"
	scp -i ~/.ssh/montreal.pem -r $OUT_DIR/twoDay/* ubuntu@$WEBSERVERIP:html/windgrams/twoDay/
	scp -i ~/.ssh/montreal.pem -r $OUT_DIR/oneDay/* ubuntu@$WEBSERVERIP:html/windgrams/oneDay/
fi
##############################################################################################
# create a javascript version of the location.txt file
##############################################################################################
if [ -z $NOUPLOAD ]; then
    ./make-new-locations.sh
    
    python - <<END
fn = 'locations.txt'
fout = 'locations.js'
f = open(fn)
lines = f.readlines()
f.close()
js = open(fout, 'w+')
js.write('/* THIS FILE IS AUTOMATICALLY GENERATED*/\n\n')
js.write('/* windgram location variable\n')
js.write('* [region, location] */\n\n')
js.write('var locations=new Array();\n')
for i in range(0, len(lines)-1):
    split_line = lines[i+1].split(',')
    if len(split_line) >= 2 :
        js.write('locations[' + str(i) + ']=["' + split_line[0].strip() + '","' + split_line[1].strip() + '"];\n')
    else:
        print "error on line " + str(i) + " of " + fn + ". Found " + str(len(split_line)) + " fields. Expected 2 or more"
js.close()
print "Converted " + fn + " to a javascript format file, " + fout
END
    echo "scp -i ~/.ssh/montreal.pem locations.js new-locations.js ubuntu@$WEBSERVERIP:html/windgrams-continental-new"
    scp -i ~/.ssh/montreal.pem locations.js new-locations.js ubuntu@$WEBSERVERIP:html/windgrams
    scp -i ~/.ssh/montreal.pem locations.js new-locations.js ubuntu@$WEBSERVERIP:html/
fi
exit 1
echo "Uploading windgram tiles"
cd ..
./upload-windgram-tiles.sh
echo `date` > /mnt/windgrams-done
